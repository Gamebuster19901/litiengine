plugins {
  id 'edu.sc.seis.launch4j' version '2.4.4'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

archivesBaseName = "utiliti"
version = "v0.4.20-alpha"
mainClassName = "de.gurkenlabs.utiliti.Program"

sourceSets {
  main.java.srcDir "src"
  main.resources.srcDir "resources"
  main.resources.srcDir "localization"
  
  test.java.srcDir "tests"
  test.resources.srcDir "tests"
}

dependencies {
  implementation project(':')
  
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.+'
  testImplementation 'org.junit.jupiter:junit-jupiter-params:5.4.+'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.+'
  testImplementation 'org.mockito:mockito-core:2.25.+'
} 

test {
  useJUnitPlatform()
}

jar {
  from {
    configurations.runtimeClasspath.collect {
      it.isDirectory() ? it : zipTree(it)
    }
    configurations.compileClasspath.collect {
      it.isDirectory() ? it : zipTree(it)
    }
  }  {
     exclude 'META-INF/services/**'
  }
  
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
  
  exclude '**/*.dll'
  exclude '**/*.jnilib'
  exclude '**/*.dylib'
  exclude '**/*.so'
  exclude 'junit**/**'
  
  manifest {
    attributes 'Main-Class': 'de.gurkenlabs.utiliti.Program'
  }
}

launch4j {
  mainClassName = 'de.gurkenlabs.utiliti.Program'
  icon = 'pixel-icon-utiLITI.ico'
  outputDir = 'libs'
  outfile = archivesBaseName + '-v0.4.20-alpha.exe'
  companyName = 'gurkenlabs.de'
  version = '0.4.20'
  textVersion = '0.4.20'
  copyright = '2020 gurkenlabs.de'
  jvmOptions = ['-Xms256m', '-Xmx1024m']
}

task copyDistFiles(type: Copy) { 
  def buildFolder = new File(buildDir, 'libs')
  from('/dist/'){
    include 'pixel-icon-utiliti.ico'
    include 'config.properties'
  }
  
  into buildFolder
}

task distZipWindows(type: Zip) {
  group 'build'
  from 'build/libs/'
  include '*.exe'
  include 'config.properties'

  archiveClassifier = 'win'
  destinationDirectory = file('build/libs/')
  
  dependsOn createAllExecutables
}

task distZipLinuxMac(type: Zip) {
  group 'build'
  from 'build/libs/'
  include '*.jar'
  include 'config.properties'

  archiveClassifier = 'linux-mac'
  destinationDirectory = file('build/libs/')
}

build.dependsOn copyDistFiles